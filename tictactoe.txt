<!DOCTYPE html>
<html>
<head>
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            margin: 0;
            padding: 0;
        }

        #container {
            text-align: center;
            margin-top: 50px;
        }

        #board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 5px;
            margin: 0 auto;
            width: 306px;
            background-color: #f0f0f0;
            border: 3px solid #333;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        .cell {
            width: 100px;
            height: 100px;
            font-size: 36px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #333;
            cursor: pointer;
            background-color: #fff;
            transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out, transform 0.2s ease-in-out;
            color: #333;
        }

        .cell:hover {
            background-color: #ddd;
        }

        .cell-clicked {
            animation: cellClick 0.2s ease-in-out;
        }

        @keyframes cellClick {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.1);
            }
            100% {
                transform: scale(1);
            }
        }

        h1 {
            font-size: 36px;
            color: #333;
        }

        .winner {
            font-size: 24px;
            color: #009900;
            font-weight: bold;
            margin-top: 20px;
        }

        button {
            background-color: black;
            color: #fff;
            border: none;
            padding: 12px 24px;
            font-size: 18px;
            cursor: pointer;
            border-radius:125%;
            margin-top: 20px;
            transition: background-color 0.3s ease-in-out, transform 0.2s ease-in-out;
        }

        button:hover {
            background-color: #007700;
            transform: scale(1.05);
        }
    </style>
</head>
<body>
    <div id="container">
        <h1>Tic Tac Toe</h1>
        <div id="board"></div>
        <div class="winner" id="winner-message"></div>
        <button id="restart-button" style="display: none;">Restart Game</button>
    </div>
    <script>
        const board = document.getElementById('board');
        const winnerMessage = document.getElementById('winner-message');
        const restartButton = document.getElementById('restart-button');
        let currentPlayer = 'X';
        const cells = [];

        // Create the Tic Tac Toe board
        for (let i = 0; i < 9; i++) {
            const cell = document.createElement('div');
            cell.classList.add('cell');
            cells.push(cell);
            board.appendChild(cell);

            // Add a click event listener to each cell
            cell.addEventListener('click', () => {
                if (!cell.textContent && !checkWinner()) {
                    cell.textContent = currentPlayer;
                    cell.style.backgroundColor = currentPlayer === 'X' ? 'grey' : 'black';
                    cell.style.color = '#fff';
                    cell.classList.add('cell-clicked');
                    currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
                    checkWinner();
                }
            });
        }

        // Function to check for a winner
        function checkWinner() {
            const winPatterns = [
                [0, 1, 2],
                [3, 4, 5],
                [6, 7, 8],
                [0, 3, 6],
                [1, 4, 7],
                [2, 5, 8],
                [0, 4, 8],
                [2, 4, 6]
            ];

            for (const pattern of winPatterns) {
                const [a, b, c] = pattern;
                if (cells[a].textContent && cells[a].textContent === cells[b].textContent && cells[a].textContent === cells[c].textContent) {
                    winnerMessage.textContent = `${cells[a].textContent} wins!`;
                    winnerMessage.style.display = 'block';
                    restartButton.style.display = 'block';
                    return true;
                }
            }

            if (![...cells].some(cell => !cell.textContent)) {
                winnerMessage.textContent = "It's a draw!";
                winnerMessage.style.display = 'block';
                restartButton.style.display = 'block';
                return true;
            }

            return false;
        }

        // Function to reset the board
        function resetBoard() {
            cells.forEach(cell => {
                cell.textContent = '';
                cell.style.backgroundColor = '#fff';
                cell.style.color = '#333';
                cell.classList.remove('cell-clicked');
            });
            winnerMessage.style.display = 'none';
            restartButton.style.display = 'none';
            currentPlayer = 'X';
        }

        restartButton.addEventListener('click', resetBoard);
    </script>
</body>
</html>
